from Unit1 import TaskUnit1
from Unit2 import TaskUnit2
from Unit3 import TaskUnit3
from Unit4 import TaskUnit4
from Unit5 import TaskUnit5

def Unit_1_Task(NumU1):
    if NumU1 == 1:
        print('''
        Выбрано задание №1
        Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.
    
        Пример:
        - 6 -> да
        - 7 -> да
        - 1 -> нет''')
        TaskUnit1.Task1()
    elif NumU1 == 2:
        print('''
        Выбрано задание № 2
        Напишите программу для проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.
        ''')
        TaskUnit1.Task2()
    elif NumU1 == 3:
        print('''
        Выбрано задание № 3
        Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится эта точка (или на какой оси она находится).
    
        Пример:
        - x=34; y=-30 -> 4
        - x=2; y=4-> 1
        - x=-34; y=-30 -> 3
        ''')
        TaskUnit1.Task3()
    elif NumU1 == 4:
        print('''
        Выбрано задание № 4
        Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек в этой четверти (x и y).
        ''')
        TaskUnit1.Task4()
    elif NumU1 == 5:
        print('''
        Выбрано задание № 5
        Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними в 2D пространстве.
    
        Пример:
        - A (3,6); B (2,1) -> 5,09
        - A (7,-5); B (1,-1) -> 7,21
        ''')
        TaskUnit1.Task5()
    else:
        print('Выберите номер из предложенного списка от 1 до 5! ')


def Unit_2_Task(NumU2):
    if NumU2 == 1:
        print('''
        Выбрано задание №1
        Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
        
        *Пример:*
        - 6782 -> 23
        - 0.56 -> 11
        ''')
        TaskUnit2.U2Task1()
    elif NumU2 == 2:
        print('''
        Выбрано задание № 2
        Напишите программу, которая принимает на вход число N и выдает набор произведений чисел от 1 до N.
        
        *Пример:*
        - пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)
        ''')
        TaskUnit2.U2Task2()
    elif NumU2 == 3:
        print('''
        Выбрано задание № 3
        Задайте словарь из n чисел последовательности (1 + (1/n))^n и выведите на экран их сумму.
        
        *Пример:*
        - Для n = 3:  {1: 2, 2: 2.25 , 3: 2.37}
        *Необходимо сложить все значения словаря и вывести  сумму на экран.*
        ''')
        TaskUnit2.U2Task3()
    elif NumU2 == 4:
        print('''
        Выбрано задание № 4
        Задайте список из N элементов, заполненных числами из промежутка [-N, N]. 
        Найдите произведение элементов на указанных позициях. 
        Позиции хранятся в файле file.txt в одной строке одно число.
        ''')
        TaskUnit2.U2Task4()
    elif NumU2 == 5:
        print('''
        Выбрано задание № 5
        Реализуйте алгоритм генерации случайного числа.
        (Не используя библиотеки связанные с рандомом) 
        *(Доп задача, не влияющая на оценку)*
        ''')
        TaskUnit2.U2Task5()
    else:
        print('Выберите номер из предложенного списка от 1 до 5! ')


def Unit_3_Task(NumU3):
    if NumU3 == 1:
        print('''
        Выбрано задание №1
        Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
        
        *Пример:*
        - [2, 3, 4, 5, 6] => [12, 15, 16];
        - [2, 3, 5, 6] => [12, 15]''')
        TaskUnit3.U3Task1()
    elif NumU3 == 2:
        print('''
        Выбрано задание № 2
        Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
        
        *Пример:*
        - [1.1, 1.2, 3.1, 5.1, 10.01] => 0.19''')
        TaskUnit3.U3Task2()
    elif NumU3 == 3:
        print('''
        Выбрано задание № 3
        Напишите программу, которая будет преобразовывать десятичное число в двоичное.
        
        *Пример:*
        - 45 -> 101101
        - 3 -> 11
        - 2 -> 10''')
        TaskUnit3.U3Task3()
    elif NumU3 == 4:
        print('''
        Выбрано задание № 4
        Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
        
        *Пример:*
        - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]
        [Негафибоначчи]
        ''')
        TaskUnit3.U3Task4()
    else:
        print('Выберите номер из предложенного списка от 1 до 4! ')


def Unit_4_Task(NumU4):
    if NumU4 == 1:
        print('''
        Выбрано задание №1
        Вычислить число ПИ c заданной точностью d

        *Пример:* 
        - при d = 0.0001, π = 3.1415.    10^-1 ≤ d ≤ 10^-10
        ''')
        TaskUnit4.U4Task1()
    elif NumU4 == 2:
        print('''
        Выбрано задание № 2
        Задайте натуральное число N.
        Напишите программу, которая составит список простых множителей числа N.
        (Выполнили на семинаре)
        ''')
        TaskUnit4.U4Task2()
    elif NumU4 == 3:
        print('''
        Выбрано задание № 3
        Задайте последовательность чисел. 
        Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.
        ''')
        TaskUnit4.U4Task3()
    elif NumU4 == 4:
        print('''
        Выбрано задание № 4
        Задана натуральная степень k. 
        Сформировать случайным образом список коэффициентов (значения от 0 до 100) 
        многочлена и записать в файл многочлен степени k(до 6 степени).*

        *Пример:* 
        - k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0
        ''')
        TaskUnit4.U4Task4()
    elif NumU4 == 5:
        print('''
        Выбрано задание № 5
        Даны два файла, в каждом из которых находится запись многочлена. 
        Задача - сформировать файл, содержащий сумму многочленов.*
        
        Пример:
            - 2*x² + 4*x + 5 = 0 
            - 5*x² + 2*x + 43 = 0
            - Результат: 7*x^2 + 6*x + 48 = 0
        *Значения коэффициентов от -100 до 100
        *Сумма многочленов с разными степенями
        Пример:
            - 2*x² + 4*x + 5 = 0
            - 5*x^4 + 2*x^3 - 6*x^2 + 13*x + 43 = 0
            - Результат: 5*x^4 + 2*x^3 - 4*x^2 + 17*x + 48 = 0
        ''')
        TaskUnit4.U4Task5()
    else:
        print('Выберите номер из предложенного списка от 1 до 5! ')

def Unit_5_Task(NumU5):
    if NumU5 == 1:
        print('''
        Выбрано задание №1
        Напишите программу, удаляющую из текста все слова, содержащие ""абв"".
        ''')
        TaskUnit5.U5Task1()
    elif NumU5 == 2:
        print('''
        Выбрано задание № 2
        Создайте программу для игры с конфетами человек против человека.

        Условие задачи: На столе лежит 2021 конфета. Играют два игрока делая ход друг после друга. 
        Первый ход определяется жеребьёвкой. За один ход можно забрать не более чем 28 конфет. 
        Все конфеты оппонента достаются сделавшему последний ход. Сколько конфет нужно взять первому игроку,
        чтобы забрать все конфеты у своего конкурента?
        a) Добавьте игру против бота
        b) Подумайте как наделить бота ""интеллектом""
        ''')
        TaskUnit5.U5Task2()
    elif NumU5 == 3:
        print('''
        Выбрано задание № 3
        Создайте программу для игры в ""Крестики-нолики"".
        ''')
        TaskUnit5.U5Task3()
    elif NumU5 == 4:
        print('''
        Выбрано задание № 4
        Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
        ''')
        TaskUnit5.U5Task4()
    else:
        print('Выберите номер из предложенного списка от 1 до 4! ')
